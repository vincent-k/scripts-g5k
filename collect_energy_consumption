#!/bin/bash

# Get parameters
NODE="$1"
BMC_USER="$2"
BMC_MDP="$3"
LOG_DIR="$4"

function get_power_consumption {
	
	local NODE="$1"
	local LOG_DIR="$2"

	if [ -n "$LOG_DIR" ]; then
		echo -e "`date +%s`\t`ipmitool -H $(host $(echo $NODE | cut -d'.' -f1)-bmc.$(echo $NODE | cut -d'.' -f2,3,4) | awk '{print $4;}') -I lan -U $BMC_USER -P $BMC_MDP sdr get Power | grep Reading | cut -d':' -f 2 | awk '{print $1;}'`" >> $LOG_DIR/$NODE
	else	
		echo -e "$NODE:\t`ipmitool -H $(host $(echo $NODE | cut -d'.' -f1)-bmc.$(echo $NODE | cut -d'.' -f2,3,4) | awk '{print $4;}') -I lan -U $BMC_USER -P $BMC_MDP sdr get Power | grep Reading | cut -d':' -f 2 | awk '{print $1;}'` Watt"
	fi
}

# Catch termination sigs
trap "echo -e 'Stopping energy consumption collect' && exit 0" SIGINT SIGTERM SIGKILL

# Create output dir if it doesn't exist
if [ -n "$LOG_DIR" -a ! -d "$LOG_DIR" ]; then
	mkdir $LOG_DIR
fi

# Get energy consumption (every second) of all nodes
while [ true ]; do

	if [ -n "$NODE" ]; then
		if [ -f "$NODE" ]; then
			for N in `cat $NODE`; do
				get_power_consumption $N $LOG_DIR &
			done
		else
			get_power_consumption $N $LOG_DIR &
		fi
		wait
	else
		exit 0
	fi
	sleep 1
done
