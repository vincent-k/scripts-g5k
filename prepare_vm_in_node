#!/bin/bash

# Get parameters
VM_NAME=$1
NODE="$2"
IP="$3"
VM_IMG="$4"

# Set global parameters
SSH_USER='root'
SSH_OPTS=' -o StrictHostKeyChecking=no -o BatchMode=yes -o UserKnownHostsFile=/dev/null -o LogLevel=quiet '
DOMAIN=`hostname | cut -d. -f2`.grid5000.fr

echo -ne "* Prepare $VM_NAME in node $NODE .."

# Connect img to the system and mount it
if [ "${VM_IMG##*.}" == "qcow2" ]; then
	ssh $SSH_USER@$NODE $SSH_OPTS "qemu-nbd --connect=/dev/nbd0 $VM_IMG >/dev/null"
	sleep 5
	ssh $SSH_USER@$NODE $SSH_OPTS "mount /dev/nbd0p1 /mnt"

else
	ssh $SSH_USER@$NODE $SSH_OPTS "losetup -f $VM_IMG"
	sleep 5
	sh $SSH_USER@$NODE $SSH_OPTS "mount /dev/loop0 /mnt"
fi

# Create the network file
NET_CONF=$(echo -e "auto lo\niface lo inet loopback\n\nauto eth0\niface eth0 inet static\naddress $IP\n")
NET_CONF+="$(g5k-subnets -a | awk '{ print "\nnetmask "$3 "\nbroadcast "$2 "\ngateway "$4 }')"
ssh $SSH_USER@$NODE $SSH_OPTS "echo -e \"$NET_CONF\" > /mnt/etc/network/interfaces"

# Create resolv.conf file
RESOLV_CONF=$(echo -e "domain $DOMAIN\nsearch $DOMAIN\n")
RESOLV_CONF+="$(g5k-subnets -a | awk '{ print "\nnameserver "$7 }')"
ssh $SSH_USER@$NODE $SSH_OPTS "echo -e \"$RESOLV_CONF\" > /mnt/etc/resolv.conf"

# Copy config files
ssh $SSH_USER@$NODE $SSH_OPTS "cp /etc/ssh/ssh_config /mnt/etc/ssh/"
ssh $SSH_USER@$NODE $SSH_OPTS "cp /root/.ssh/* /mnt/root/.ssh/"

# Unmount and disconnect partition
ssh $SSH_USER@$NODE $SSH_OPTS "sudo umount /mnt"
if [ "${VM_IMG##*.}" == "qcow2" ]; then
	ssh $SSH_USER@$NODE $SSH_OPTS "qemu-nbd -d /dev/nbd0 >/dev/null"
else
	ssh $SSH_USER@$NODE $SSH_OPTS "losetup -d /dev/loop0"
fi
ssh $SSH_USER@$NODE $SSH_OPTS "sync"

echo -e ". DONE"
